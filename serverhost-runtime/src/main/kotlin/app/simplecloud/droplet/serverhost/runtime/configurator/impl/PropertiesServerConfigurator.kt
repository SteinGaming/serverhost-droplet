package app.simplecloud.droplet.serverhost.runtime.configurator.impl

import app.simplecloud.droplet.serverhost.runtime.configurator.ServerConfigurator
import org.spongepowered.configurate.ConfigurationNode
import org.spongepowered.configurate.kotlin.extensions.get
import java.io.File
import java.io.FileReader
import java.io.FileWriter
import java.util.*

object PropertiesServerConfigurator : ServerConfigurator<Properties> {
    override fun load(data: ConfigurationNode): Properties {
        val parsedData = data.childrenMap().map { it.key.toString() to it.value.get<Any>() }
        val properties = Properties()
        parsedData.forEach {
            properties.setProperty(it.first, it.second.toString())
        }
        return properties
    }

    override fun load(file: File): Properties? {
        if (!file.exists()) return null
        val properties = Properties()
        properties.load(FileReader(file))
        return properties
    }

    override fun save(data: Properties, file: File) {
        val existing = load(file) ?: Properties()
        data.forEach {
            existing.setProperty(it.key.toString(), it.value.toString())
        }
        val fileWriter = FileWriter(file)
        existing.store(fileWriter, "Generated by SimpleCloud v3")
        fileWriter.close()
    }
}